stages:
    - check
    - build
    - test
    - benchmark

check:
    stage: check
    allow_failure: true
    tags:
        - vs2019
        - windows10
    script:
        - cd Tools
        - pip install cmakelang
        - python format-cmake.py
        - python format-cpp.py

build:windows_debug:
    stage: build
    tags:
        - vs2019
        - windows10
    needs:
        - check
    script:
        - cd Tools
        - python build.py -t debug
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-windows-debug/bin/

build:windows_release:
    stage: build
    tags:
        - vs2019
        - windows10
    needs:
        - check
    script:
        - cd Tools
        - python build.py -t release
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-windows-release/bin/

build:osx_debug:
    stage: build
    allow_failure: true
    tags:
        - osx
    needs:
        - check
    script:
        - cd Tools
        - python3 build.py -t debug
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-osx-debug/bin/

build:osx_release:
    stage: build
    allow_failure: true
    tags:
        - osx
    needs:
        - check
    script:
        - cd Tools
        - python3 build.py -t release
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-osx-release/bin/

build:linux_debug:
    stage: build
    allow_failure: true
    image:
        name: darkmattercoder/qt-build:5.15.1
        entrypoint: [""]
    tags:
        - gitlab-org-docker
    needs:
        - check
    script:
        - sudo apt-get update -y
        - sudo apt-get install apt-transport-https ca-certificates gnupg software-properties-common wget software-properties-common snapd -y
        - sudo /etc/init.d/snapd start
        - sudo snap install cqtdeployer
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic-rc main' -y
        - sudo apt-get update -y
        - sudo apt install build-essential libgl1-mesa-dev lld ninja-build cmake -y
        - cd Tools
        - python build.py -t debug
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-linux-debug/bin/

build:linux_release:
    stage: build
    allow_failure: true
    image:
        name: darkmattercoder/qt-build:5.15.1
        entrypoint: [""]
    tags:
        - gitlab-org-docker
    needs:
        - check
    script:
        - sudo apt-get update -y
        - sudo apt-get install apt-transport-https ca-certificates gnupg software-properties-common wget software-properties-common snapd -y
        - sudo /etc/init.d/snapd start
        - sudo snap install cqtdeployer
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic-rc main' -y
        - sudo apt-get update -y
        - sudo apt install build-essential libgl1-mesa-dev lld ninja-build cmake -y
        - cd Tools
        - python build.py -t release
    artifacts:
        expire_in: "4 weeks"
        paths:
            - build-x64-linux-release/bin/

test:windows_debug:
    stage: test
    tags:
        - windows10
        - vs2019
    dependencies:
        - build:windows_debug
    needs:
        - build:windows_debug
    script:
        - ./build-x64-windows-debug/bin/ScreenPlay.exe --no-run=false --exit=true --reporters=junit --out=test-report-junit.xml
    artifacts:
        expire_in: "4 weeks"
        when: always
        reports:
            junit: test-report-junit.xml

test:windows_release:
    stage: test
    tags:
        - windows10
        - vs2019
    dependencies:
        - build:windows_release
    needs:
        - build:windows_release
    script:
        - ./build-x64-windows-release/bin/ScreenPlay.exe --no-run=false --exit=true --reporters=junit --out=test-report-junit.xml
    artifacts:
        expire_in: "4 weeks"
        when: always
        reports:
            junit: test-report-junit.xml

build_docs:
    stage: .post
    script:
        - curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master https://gitlab.com/api/v4/projects/15800262/trigger/pipeline
