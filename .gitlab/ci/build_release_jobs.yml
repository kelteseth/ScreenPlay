steam_linux:
  stage: release_build
  extends:
    - .base_linux_build
  script:
    - python3 Tools/build.py --type=release --steam --deploy-version --use-aqt --installer
  rules:
    - if: "$CI_COMMIT_TAG"
  artifacts:
    paths:
      - build-x64-linux-release/bin

steam_windows:
  stage: release_build
  extends:
    - .base_windows_build
  script:
    - python Tools/build.py --type=release --steam --use-aqt --deploy-version
  rules:
    - if: "$CI_COMMIT_TAG"
  artifacts:
    paths:
      - build-x64-windows-release/ScreenPlay-Installer.exe
      - build-x64-windows-release/ScreenPlay-$CI_COMMIT_TAG-x64-windows-release.zip

steam_osx:
  stage: release_build
  extends:
    - .base_osx_build
  script:
    - python3 Tools/build.py --type=release --steam --use-aqt --deploy-version -sign_osx
  rules:
    - if: "$CI_COMMIT_TAG"
  artifacts:
    paths:
      - build-64-osx-universal-release/ScreenPlay.app

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: "$CI_COMMIT_TAG" # Run this job when a tag is created
      when: on_success # Only when all previous jobs succeed
  script:
    - echo "Creating a GitLab release using release-cli."
  release:
    tag_name: $CI_COMMIT_TAG
    name: "ScreenPlay $CI_COMMIT_TAG Released!"
    description: "ðŸŽ‰ A Wild ScreenPlay Release Appeard!"
    assets:
      links:
        - name: Linux x64 build
          url: "$CI_PIPELINE_URL/artifacts/download?job=steam_linux"
        - name: Windows x64 build
          url: "$CI_PIPELINE_URL/artifacts/download?job=steam_windows"
        - name: OSX universal build
          url: "$CI_PIPELINE_URL/artifacts/download?job=steam_osx"
